= AI Challenge Bot

This is a collection of tools and bots for participating in the Google AI Challenge ( http://ai-contest.com ).
It started with a very naieve bot and a planetwars library from the starter kit. On top of that I have built my own set of libraries and support tools to easily build multiple bots and have them share strategies.

The readme contains notes with observations from live / TCP matches on weaknesses my bots have and how they could be fixed. Apparently this has worked out, since Sniperbot made it to rank 190, while Toolbot never got above rank 650-ish.

== History

* Naieve bot - the starter kit bot
* Grower. Adds optimal target planet calculations
* Speed. Improves on Grower by targeting close planets, higher fleet limit.
* Seer. Introduced naieve future prediction (hence the name) and the use of different strategies in a linear fashion
* Toolbot. Uses modules to encapsulate strategies. This makes them easier to share with other bots. It also considers global game state to decide to go offensive or defensive.
* Sniperbot. Built initially to expose Toolbot's main weakness, but it was so much stronger that I made it my default bot and worked on making it more robust.

== Features designed and built

* Global stats: how am I doing vs my enemy on the whole map vs on just one planet or fleet. When I'm ahead number-wise, I can wear my opponent down. If I'm behind, I need to be agressive or I lose by being outnumbered.
* Future prediction: given a planet and all known fleets, what is the certainty we have about the future? When will fleets invade and conquer the planet? How many ships does it need to reinforce against an invasion fleet?
* Supply chains: over time, the planet that sends out most fleets to the enemy changes. If you don't setup supply lines, you will have long transit times for inbound fleets, which are easier to counter. In a game of perfect information, make sure there are lots of possibilities, but as little certainties as possible.
* Defensive behavior: reserve ships to fight off potential or real attacks. Also keep in mind the effect of the closest enemy planet attacking me, how much ships are needed to fight that off?

== Features / behavioral fixes / lessons learned

* Don't send out ships to capture a planet that is closer to the enemy than to me. Those planets can not be defended.
* Don't send support ships further than there are enemies nearby. ( http://ai-contest.com/visualizer.php?game_id=6197384 )
* When ahead, start capping neutrals until my regeneration is greater than my enemy. Attacking the closest enemy head-on has proven to make me lose my advantage in numbers versus their superior regeneration.

== Sniperbot todo / ideas

* Use predicted future for all planets to calculate future ship count and planets' regeneration and to see if I should grow or attack.
* There is a weakness when in close proximity to enemy planets with high population. When they send their fleet, my planets may send ships elsewhere and become vulnerable.
* Double check this scenario: cap all neutral planets, of which the regeneration will compensate for the ships spent in conquering it, before an enemy can arrive.
* Use predicted future to calculate which planet should receive supply chains. This may send the supply chain straight after a capture fleet.
* Account for lost regeneration from travel time when deciding what planet to cap or not ( http://ai-contest.com/visualizer.php?game_id=6201368 : capping the size 44 vs 25 vs 48 planet )